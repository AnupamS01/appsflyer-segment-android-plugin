name: Release plugin to production

on:
  pull_request:
    types:
      - closed
    branches:
      # - 'master'
      - 'dev/add-release-workflow'

jobs:
  Deploy-To-Production:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'releases/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: PR branch check
      uses: mdecoleman/pr-branch-name@1.2.0
      id: vars
      with:
        repo-token: ${{ secrets.CI_GITHUB_TOKEN }}       
    - name: Determine release tag and release branch
      run: |
        TAG=$(echo "${{ steps.vars.outputs.branch }}" | grep -Eo '[0-9]+.[0-9]+.[0-9]+')
        echo "PLUGIN_VERSION=$TAG" >> $GITHUB_ENV
        echo "RELEASE_BRANCH_NAME=${{ steps.vars.outputs.branch }}" >> $GITHUB_ENV
        echo "push new release >> $TAG"   
    - name: Create release and tag
      env:
        TAG: ${{env.PLUGIN_VERSION}}
      uses: "actions/github-script@v5"
      with:
        script: |
          try {
            await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: false,
              name: process.env.TAG,
              owner: context.repo.owner,
              prerelease: false,
              repo: context.repo.repo,
              tag_name: process.env.TAG
            });
          } catch (error) {
            core.setFailed(error.message);
          }
    - name: Set up Java 8 JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 17
        architecture: x64
        cache: 'gradle'
        check-latest: true
        
    - name: Decode GPG Key
      run: |
        mkdir -p ~/.gradle/
        echo "${{secrets.OSSRH_GPG_SECRET_KEY}}" > ~/.gradle/secring.gpg.b64
        base64 -d ~/.gradle/secring.gpg.b64 > ~/.gradle/secring.gpg    

    - name: Publish package
      # wraped the signing.password with single quotes as the password could contain special characters
      run: ./gradlew publish -Psigning.keyId=${{secrets.OSSRH_GPG_SECRET_KEY_ID}} -Psigning.password='${{secrets.OSSRH_GPG_SECRET_KEY_PASSWORD}}' -Psigning.secretKeyRingFile=$(echo ~/.gradle/secring.gpg) --warn --stacktrace
      env:
        OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
        OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}}

    # Step 8
    # Optional step, will enable you to see what you have released as well here on GitHub 
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: release-build-libs
        path: build/libs
        retention-days: 3  


    # - name: Notify with SLack
    #   uses: slackapi/slack-github-action@v1.23.0
    #   with:
    #     payload: |
    #       {
    #         "appsflyer_version": "${{env.PLUGIN_VERSION}}"
    #       }
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.CI_SLACK_WEBHOOK_URL }}    
